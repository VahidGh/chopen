# Generated by Django 2.0.3 on 2018-03-09 06:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ion_channel', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IonChannelGene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=300, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('description_evidences', models.TextField(blank=True, null=True, verbose_name='PMID for description evidence')),
                ('channel_type', models.CharField(blank=True, choices=[('Calcium Channel', 'Calcium Channel'), ('Potassium Channel', 'Potassium Channel'), ('Transient Receptor Potential Channel', 'Transient Receptor Potential Channel'), ('Cyclic Nucleotide-Gated Channel', 'Cyclic Nucleotide-Gated Channel'), ('Ligand-Gated Ion Channel', 'Ligand-Gated Ion Channel'), ('Ionotropic Glutamate Receptors', 'Ionotropic Glutamate Receptors'), ('DEG/ENaC Channels', 'DEG/ENaC Channels'), ('Chloride Channel', 'Chloride Channel')], max_length=300, null=True)),
                ('channel_subtype', models.CharField(blank=True, max_length=300, null=True)),
                ('ion_type', models.CharField(blank=True, choices=[('Ca2+', 'Calcium'), ('K+', 'Potassium'), ('Cl-', 'Chloride'), ('Na+', 'Cation'), ('Cation', 'Cation')], max_length=200, null=True)),
                ('ligand_type', models.CharField(blank=True, choices=[('ATP', 'ATP'), ('Glutamate', 'Glutamate'), ('Acetylcholine', 'Acetylcholine'), ('Serotonin', 'Serotonin'), ('Tyramine', 'Tyramine')], max_length=200, null=True)),
                ('gene_name', models.CharField(blank=True, max_length=300, null=True)),
                ('gene_WB_ID', models.CharField(blank=True, max_length=300, null=True)),
                ('gene_class', models.CharField(blank=True, max_length=300, null=True)),
                ('proteins', models.CharField(blank=True, max_length=300, null=True)),
                ('expression_pattern', models.TextField(blank=True, null=True)),
                ('expression_evidences', models.TextField(blank=True, null=True, verbose_name='PMID for expression evidence')),
                ('last_update', models.DateTimeField(auto_now=True, null=True)),
                ('ion_channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ion_channel.IonChannel')),
                ('username', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Contributor')),
            ],
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True)),
                ('sequence', models.TextField(blank=True, null=True)),
                ('fasta', models.TextField(blank=True, null=True)),
                ('gi', models.CharField(blank=True, max_length=300, null=True, verbose_name='GI number')),
                ('uniprot_ID', models.CharField(blank=True, max_length=300, null=True)),
                ('wb_ID', models.CharField(blank=True, max_length=300, null=True)),
                ('pdb_ID', models.CharField(blank=True, max_length=300, null=True)),
                ('interpro_ID', models.CharField(blank=True, max_length=300, null=True)),
                ('structure', models.TextField(blank=True, null=True)),
                ('structure_image', models.ImageField(blank=True, null=True, upload_to='ion_channel/structures/')),
                ('ion_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='channelworm.IonChannelGene')),
            ],
        ),
    ]
